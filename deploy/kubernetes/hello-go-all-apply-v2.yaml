apiVersion: v1
kind: Service
metadata:
  name: hello-go
  labels:
    app: hello-go
spec:
  ports:
  - port: 8000
    name: http
  selector:
    app: hello-go
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: hello-go-v1
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: hello-go
        version: v1
    spec:
      containers:
      - name: hello-go
        image: quay.io/sheshagiri0/hello-go:2.0.0-10
        resources:
          requests:
            cpu: "100m"
        imagePullPolicy: IfNotPresent #Always
        ports:
        - containerPort: 8000
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: hello-go-v2
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: hello-go
        version: v2
    spec:
      containers:
      - name: hello-go
        image: quay.io/sheshagiri0/hello-go:3.0.0-11
        resources:
          requests:
            cpu: "100m"
        imagePullPolicy: IfNotPresent #Always
        ports:
        - containerPort: 8000
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: hello-go-gateway
spec:
  selector:
    istio: ingressgateway # use istio default controller
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "*"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: hello-go
spec:
  hosts:
  - "*"
  gateways:
  - hello-go-gateway
  http:
  - match:
    - uri:
        prefix: "/hello-go"
    route:
    - destination:
        host: hello-go
        port:
          number: 8000
    route:
    - destination:
        host: hello-go
        port:
          number: 8000
---